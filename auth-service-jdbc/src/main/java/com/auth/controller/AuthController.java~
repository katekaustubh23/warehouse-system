package com.auth.controller;


import com.auth.session.LoginResponse;
import com.auth.token.JwtTokenService;
import org.springframework.http.ResponseEntity;

import org.springframework.security.core.Authentication;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.web.bind.annotation.*;

import java.util.List;
import java.util.stream.Collectors;

//@RestController
//@RequestMapping("/api/v1/auth")
public class AuthController {
//    private final JwtTokenService jwtTokenService;
//
//    public AuthController(JwtTokenService jwtTokenService) {
//        this.jwtTokenService = jwtTokenService;
//    }
//
//    @PostMapping("/login")
//    public ResponseEntity<LoginResponse> login(Authentication authentication) {
//        // Get username from authenticated token
//        String username = (String) authentication.getPrincipal();
//
//        // Extract roles from GrantedAuthorities
//        List<String> roles = authentication.getAuthorities()
//                .stream()
//                .map(GrantedAuthority::getAuthority)
//                .map(role -> role.replace("ROLE_", "")) // Optional: remove prefix
//                .collect(Collectors.toList());
//
//        // Generate tokens
//        String accessToken = jwtTokenService.generateAccessToken(username, roles);
//        String refreshToken = jwtTokenService.generateRefreshToken(username);
//
//        // Return tokens
//        return ResponseEntity.ok(new LoginResponse(accessToken, refreshToken));
//    }
}